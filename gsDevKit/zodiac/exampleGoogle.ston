TDScriptLeafNode{#name:'exampleGoogle',#contents:'[ :topez :objIn :tokens :command :commandNode | 
  | opts args |
  \"for help: ./exampleClient -h\"
  command
    getOptsMixedLongShort: {#(\'help\' $h #\'none\')}
    optionsAndArguments: [ :options :operands | 
      opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ 
      | query request sslClient failBlock bytesRead dataBuffer dataLength data portNum hostName bytes |
      portNum := 443.
      hostName := \'encrypted.google.com\'.
      failBlock := [ :sock :shouldLog | 
      | err arr |
      err := sock fetchLastIoErrorString.
      err
        ifNotNil: [ 
          Transcript
            cr;
            show: err ].
      arr := sock class fetchErrorStringArray.
      1 to: arr size do: [ :n | 
        Transcript
          cr;
          show: (arr at: n) ].
      sock close.
      SocketError signal: err asString ].
      sslClient := GsSecureSocket newClient.
      (sslClient
        connectTo: portNum
        on: (GsSocket getHostAddressByName: hostName))
        ifTrue: [ 
          Transcript
            cr;
            show: \'regular socket connect completed OK.\' ]
        ifFalse: [ 
          sslClient close.
          sslClient
            halt:
              \'Unable to connect to \' , hostName , \' pn port \' , portNum asString ].
      GsSecureSocket disableCertificateVerificationOnClient.
      sslClient secureConnect
        ifTrue: [ 
          Transcript
            cr;
            show: \'Secure connection established\' ]
        ifFalse: [ 
          | certError |
          Transcript
            cr;
            show: \'secureConnect failed\'.
          certError := GsSecureSocket
            fetchLastCertificateVerificationErrorForClient.
          certError
            ifNil: [ 
              Transcript
                cr;
                show:
                    \'nil result from fetchLastCertificateVerificationErrorForClient\' ]
            ifNotNil: [ 
              Transcript
                cr;
                show: \'Cert error: =>\' , certError ].
          failBlock value: sslClient value: nil ].
      Transcript
        cr;
        show: \'Current cipher in use is: \' , sslClient fetchCipherDescription.
      Transcript
        cr;
        show: \'Starting write\'.
      query := \'Smalltalk\'.
      request := String
        streamContents: [ :out | 
          out << \'GET /search?q=\' << query << \' HTTP/1.1\' << String crlf.
          out << \'Host: encrypted.google.com\' << String crlf.
          out << \'Connection: close\' << String crlf.
          out << String crlf ].
      dataLength := sslClient write: request.
      dataLength == request size
        ifTrue: [ 
          Transcript
            cr;
            show: \'Finished sending request to peer\' ]
        ifFalse: [ 
          Transcript
            cr;
            show: \'write of request failed, result was \' , dataLength asString.
          failBlock value: sslClient value: nil ].
      Transcript
        cr;
        show: \'Starting read\'.
      dataBuffer := String new.
      bytesRead := -1.
      [ bytesRead ~= 0 ]
        whileTrue: [ 
          bytesRead := sslClient
            read: 16384
            into: dataBuffer
            startingAt: dataBuffer size + 1.
          bytesRead isNil
            ifTrue: [ 
              Transcript
                cr;
                show: \'read failed\'.
              failBlock value: sslClient value: nil ]
            ifFalse: [ 
              Transcript
                cr;
                show: \'Read \' , bytesRead asString , \' bytes from peer.\' ] ].
      Transcript
        cr;
        show:
            \'Finished reading, read \' , dataBuffer size asString , \' bytes from peer\'.
      sslClient close.
      Transcript
        cr;
        show: \'Result is \' , dataBuffer , \' of size \' , data size asString ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  exampleClient - exampleClient sript utility template
SYNOPSIS
  exampleClient [-h|--help]
DESCRIPTION
EXAMPLES
  ./exampleClient --help
  ./exampleClient -h
\'
        topez: topez ] ]',#creationTime:DateAndTime['2015-12-03T14:18:30.09478807449341-08:00'],#modificationTime:DateAndTime['2015-12-03T14:43:39.26613903045654-08:00']}